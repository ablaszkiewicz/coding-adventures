var A=Object.defineProperty;var B=(w,u,l)=>u in w?A(w,u,{enumerable:!0,configurable:!0,writable:!0,value:l}):w[u]=l;var y=(w,u,l)=>(B(w,typeof u!="symbol"?u+"":u,l),l);(function(){"use strict";class w{constructor(t,s){this.min=t,this.max=s}surrounds(t){return t>=this.min&&t<=this.max}clamp(t){return t<this.min?this.min:t>this.max?this.max:t}}function u(c,t,s){const{data:n}=c,{x:e,y:r}=t,{x:a,y:o,z:p}=s,h=(r*c.width+e)*4,m=new w(0,.999),d=256*m.clamp(a),g=256*m.clamp(o),T=256*m.clamp(p);n[h]=d,n[h+1]=g,n[h+2]=T,n[h+3]=255}const l=Number.POSITIVE_INFINITY;function f(c,t){return Math.random()*(t-c)+c}class i{constructor(t,s,n){this.x=t,this.y=s,this.z=n}add(t){return new i(this.x+t.x,this.y+t.y,this.z+t.z)}subtract(t){return new i(this.x-t.x,this.y-t.y,this.z-t.z)}scalarMultiply(t){return new i(this.x*t,this.y*t,this.z*t)}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}lengthSquared(){return this.x*this.x+this.y*this.y+this.z*this.z}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}cross(t){return new i(this.y*t.z-this.z*t.y,this.z*t.x-this.x*t.z,this.x*t.y-this.y*t.x)}unit(){return this.scalarMultiply(1/this.length())}static randomInUnitSphere(){for(;;){const t=i.randomBetween(-1,1);if(!(t.lengthSquared()>=1))return t}}static randomUnitVector(){return i.randomInUnitSphere().unit()}randomOnHemisphere(){const t=i.randomInUnitSphere();return t.dot(this)>0?t:t.scalarMultiply(-1)}static random(){return new i((Math.random()-.5)*l,(Math.random()-.5)*l,(Math.random()-.5)*l)}static randomBetween(t,s){return new i(f(t,s),f(t,s),f(t,s))}}class S{constructor(){y(this,"position",new i(0,0,0));y(this,"normal",new i(0,0,0));y(this,"t",0)}setFaceNormal(t,s){t.direction.dot(s)<0?this.normal=s:this.normal=s.scalarMultiply(-1)}}class z{constructor(t,s){this.origin=t,this.direction=s}at(t){return this.origin.add(this.direction.scalarMultiply(t))}}const x=800,D=16/9,I=100,U=5,M=x/D;class P{constructor(){y(this,"center");y(this,"pixel00Position");y(this,"pixelDeltaU");y(this,"pixelDeltaV");y(this,"pixelSamplesScale")}render(t,s){this.initialize();const n=new ImageData(x,M);let e=0;for(let r=0;r<x;r++)for(let a=0;a<M;a++){let o=new i(0,0,0);for(let h=0;h<I;h++){const m=this.getRay(r,a);o=o.add(this.rayColor(m,t,U))}u(n,{x:r,y:a},o.scalarMultiply(this.pixelSamplesScale));const p=(r*M+a)/(x*M)*100;s&&p-e>1&&(s(p),e=p)}return n}initialize(){this.center=new i(0,0,0),this.pixelSamplesScale=1/I;const t=1,s=2,n=s*x/M,e=new i(n,0,0),r=new i(0,-s,0);this.pixelDeltaU=e.scalarMultiply(1/x),this.pixelDeltaV=r.scalarMultiply(1/M),this.pixel00Position=this.center.subtract(new i(0,0,t)).subtract(e.scalarMultiply(.5)).subtract(r.scalarMultiply(.5))}rayColor(t,s,n){if(n<=0)return new i(0,0,0);const e=new S;if(s.hit(t,.001,l,e)){const o=e.normal.add(i.randomUnitVector());return this.rayColor(new z(e.position,o),s,n-1).scalarMultiply(.5)}const a=.5*(t.direction.unit().y+1);return new i(.5,.7,1).scalarMultiply(a).add(new i(1,1,1).scalarMultiply(1-a))}getRay(t,s){const n=this.sampleSquare(),e=this.pixel00Position.add(this.pixelDeltaU.scalarMultiply(t+n.x)).add(this.pixelDeltaV.scalarMultiply(s+n.y)),r=this.center,a=e.subtract(this.center);return new z(r,a)}sampleSquare(){return new i(Math.random()-.5,Math.random()-.5,0)}}class q{constructor(t){this.objects=t}hit(t,s,n,e){const r=new S;let a=!1,o=n;for(const p of this.objects)p.hit(t,s,o,r)&&(a=!0,o=r.t,e.normal=r.normal,e.position=r.position,e.t=r.t);return a}}class b{constructor(t,s){this.center=t,this.radius=s}hit(t,s,n,e){const r=this.center.subtract(t.origin),a=t.direction.lengthSquared(),o=t.direction.dot(r),p=r.lengthSquared()-this.radius*this.radius,h=o*o-a*p;if(h<0)return!1;const m=Math.sqrt(h);let d=(o-m)/a;if((d<=s||d>=n)&&(d=(o+m)/a,d<=s||d>=n))return!1;e.t=d,e.position=t.at(d);const g=e.position.subtract(this.center).scalarMultiply(1/this.radius);return e.setFaceNormal(t,g),!0}}class E{constructor(){}render(t){const s=new q([new b(new i(0,0,-1),.5),new b(new i(0,-100.5,-1),100)]);return new P().render(s,t)}}onmessage=async()=>{const t=await new E().render(s=>postMessage({status:"progress",data:s}));postMessage({status:"done",data:t})}})();
